<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd ">


  
	<!-- Initialization for data source -->
	<!-- 说明：DriverManagerDataSource建立连接是只要有连接就新建一个connection,根本没有连接池的作用 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/zxsjdatabase" />
		<property name="username" value="root" />
		<property name="password" value="970301" />
	</bean>
	<!-- 其他数据库连接方式 
		一.使用org.apache.commons.dbcp.BasicDataSource 
		说明:这是一种推荐说明的数据源配置方式，它真正使用了连接池技术
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"> 
              <property name="driverClassName"> 
                     <value>com.mysql.jdbc.Driver</value> 
              </property> 
              <property name="url"> 
                     <value>jdbc:mysql://localhost:3306/zxsjdatabase</value> 
              </property> 
              <property name="username"> 
                     <value>root</value> 
              </property> 
              <property name="password"> 
                     <value>970301</value> 
              </property> 
              <property name="maxActive"> 
                     <value>255</value> 
              </property> 
              <property name="maxIdle"> 
                     <value>2</value> 
              </property> 
              <property name="maxWait"> 
                     <value>120000</value> 
              </property> 
       </bean> 
	
	
		网址：https://blog.csdn.net/bigtree_3721/article/details/50838207
	-->
	

	<!-- Definition for studentJDBCTemplate bean -->
	<bean id="loginJDBCTemplate"
		class="com.test.Dao.LoginServer">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="LoginJDBCTemplate"
		class="com.test.Dao.LoginServer">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="searchBookServerJDBCTemplate"
		class="com.test.Dao.SearchBookServlet">
		<property name="dataSource" ref="dataSource"/>
	
	</bean>
	<bean id="SearchBookServerJDBCTemplate"
		class="com.test.Dao.SearchBookServlet">
		<property name="dataSource" ref="dataSource"/>
	
	</bean>
	
		<bean id="bookSearchService" class="com.test.Service.BookSearchService" />
		<bean id="searchBookDao" class="com.test.Dao.SearchBookServlet" />
</beans>

<!-- 网页index.html -> 通过web.xml 找到DispatcherServlet(myLogin-servlet.xml)
 -> 通过扫描Controller注释 找到Controller类 -> 表单提交内容放到po类 ->index.html 相应的动作Action
 与Controller类注释一样的路径 ->找到路径后 相应操作  -->